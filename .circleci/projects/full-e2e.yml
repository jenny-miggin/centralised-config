version: 2.1

orbs:
  node: circleci/node@7.1.0

commands:
  setup_node_dependencies:
    description: "Install and cache Node dependencies"
    steps:
      - node/install-packages:
          pkg-manager: npm
          cache-version: v1
          include-branch-in-cache-key: false

  setup_android_environment:
    description: "Setup Android environment"
    steps:
      - run:
          name: Accept Android SDK licenses
          command: yes | sdkmanager --licenses || true
      - run:
          name: Install additional Android tools
          command: |
            sdkmanager "build-tools;34.0.0" "platforms;android-34" "system-images;android-34;google_apis;x86_64"

  setup_ios_environment:
    description: "Setup iOS environment"
    steps:
      - run:
          name: Install CocoaPods dependencies
          command: |
            cd ios
            pod install --repo-update

executors:
  node_executor:
    docker:
      - image: cimg/node:20.11.0
  android_executor:
    docker:
      - image: cimg/android:2024.01.1-node
    resource_class: large
    environment:
      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: -Dorg.gradle.daemon=false

jobs:
  # Common jobs (always run)
  test:
    executor: node_executor
    steps:
      - checkout
      - setup_node_dependencies
      - run:
          name: Run unit tests with coverage
          command: npm run test:coverage || echo "Tests failed but continuing with build"
      - store_test_results:
          path: coverage
      - store_artifacts:
          path: coverage/lcov-report
          destination: coverage-report

  security_scan:
    executor: node_executor
    steps:
      - checkout
      - setup_node_dependencies
      - run:
          name: Run security audit
          command: npm audit --audit-level=moderate || echo "Security issues found but continuing"
      - run:
          name: Run lint checks
          command: npm run lint

  # iOS-specific jobs
  build_ios:
    macos:
      xcode: "15.4.0"
    resource_class: macos.m1.medium.gen1
    steps:
      - checkout
      - setup_node_dependencies
      - setup_ios_environment
      - run:
          name: Build iOS app for simulator
          command: |
            npx react-native run-ios --simulator="iPhone 15" --no-packager
      - run:
          name: Archive iOS build
          command: |
            cd ios
            xcodebuild -workspace DemoMobileApp.xcworkspace \
              -scheme DemoMobileApp \
              -configuration Debug \
              -sdk iphonesimulator \
              -destination 'platform=iOS Simulator,name=iPhone 15' \
              -derivedDataPath build \
              build
      - store_artifacts:
          path: ios/build/Build/Products/Debug-iphonesimulator/DemoMobileApp.app
          destination: ios-build
      - persist_to_workspace:
          root: .
          paths:
            - ios/build

  # iOS E2E tests
  e2e_ios:
    macos:
      xcode: "15.4.0"
    resource_class: macos.m1.medium.gen1
    steps:
      - checkout
      - setup_node_dependencies
      - setup_ios_environment
      - attach_workspace:
          at: .
      - run:
          name: Start Metro bundler in background
          command: npx react-native start --reset-cache
          background: true
      - run:
          name: Wait for Metro to start
          command: sleep 30
      - run:
          name: Install Detox CLI
          command: npm install -g detox-cli
      - run:
          name: Build iOS app for testing
          command: detox build --configuration ios.sim.debug
      - run:
          name: Run E2E tests on iOS simulator
          command: detox test --configuration ios.sim.debug --cleanup
      - store_test_results:
          path: e2e/artifacts
      - store_artifacts:
          path: e2e/artifacts
          destination: e2e-artifacts

  # Android-specific jobs  
  build_android:
    executor: android_executor
    steps:
      - checkout
      - setup_node_dependencies
      - setup_android_environment
      - run:
          name: Build Android APK
          command: |
            cd android
            ./gradlew assembleDebug --stacktrace
      - store_artifacts:
          path: android/app/build/outputs/apk/debug/app-debug.apk
          destination: android-build
      - persist_to_workspace:
          root: .
          paths:
            - android/app/build

  # Android E2E tests
  e2e_android:
    executor: android_executor
    steps:
      - checkout
      - setup_node_dependencies
      - setup_android_environment
      - attach_workspace:
          at: .
      - run:
          name: Create Android Virtual Device
          command: |
            avdmanager create avd -n test -k "system-images;android-34;google_apis;x86_64" --force
      - run:
          name: Start Android Emulator
          command: |
            emulator -avd test -no-window -no-audio -no-animation -gpu off
          background: true
      - run:
          name: Wait for emulator to boot
          command: |
            adb wait-for-device
            while [ "`adb shell getprop sys.boot_completed | tr -d '\r'`" != "1" ] ; do sleep 1; done
      - run:
          name: Start Metro bundler in background
          command: npx react-native start --reset-cache
          background: true
      - run:
          name: Wait for Metro to start
          command: sleep 30
      - run:
          name: Install Detox CLI
          command: npm install -g detox-cli
      - run:
          name: Build Android app for testing
          command: detox build --configuration android.emu.debug
      - run:
          name: Run E2E tests on Android emulator
          command: detox test --configuration android.emu.debug --cleanup
      - store_test_results:
          path: e2e/artifacts
      - store_artifacts:
          path: e2e/artifacts
          destination: e2e-artifacts

workflows:
  full_workflow:
    jobs:
      - test
      - security_scan
      - build_ios:
          requires:
            - test
            - security_scan
      - build_android:
          requires:
            - test
            - security_scan
      - e2e_ios:
          requires:
            - build_ios
      - e2e_android:
          requires:
            - build_android